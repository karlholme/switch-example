// stylelint-disable scss/operator-no-unspaced

/* Get some of the new onces from BS5 */
@import "bootstrap/scss/mixins/_text-truncate.scss";
@import "bootstrap/scss/mixins/_border-radius.scss";

/**
 * Glyphs
 */

// data:image/svg+xml; charset=utf-8,
@mixin glyph($width, $height, $color, $vector) {
  width: $width + 0 + px;
  height: $height + 0 + px;
  // We need to remove the # in a color definition, to be able to correctly
  // escape color definitions in inline svg:s
  background-image: url('data:image/svg+xml;charset=UTF-8,%3Csvg fill="#{encodeHEX($color)}" viewBox="0 0 #{$width} #{$height}" xmlns="http://www.w3.org/2000/svg"%3E#{$vector}%3C/svg%3E');
  background-repeat: no-repeat;
}

@mixin glyph-arrow-right($color) {
  @include glyph(30, 17, $color, '%3Cpath d="m19.1 1.9 5.3 5.3H0v2.5h24.4l-5.3 5.4 1.8 1.7 8.4-8.3L20.9 0"/%3E');
}

@mixin glyph-chevron-down($color) {
  @include glyph(18, 12, $color, '%3Cpath d="M18 1.8 16.4.4l-7 7-7.2-7L1 1.8l7.1 7 1.4 1.5 1.4-1.5z"/%3E');
}

@mixin glyph-chevron-up($color) {
  @include glyph(18, 12, $color, '%3Cpath d="m17.9 9-1.4 1.4-7.1-7-7.1 7L.9 9l7-7L9.5.5 10.8 2z"/%3E');
}

@mixin glyph-chevron-right($color) {
  @include glyph(20, 20, $color, '%3Cpath d="M1.4 0 0 1.4l4 4-4 4 1.4 1.4 4-4 1.4-1.4L5.4 4z"/%3E');
}

@mixin checkbox-tick($color) {
  @include glyph(30, 17, $color, '%3Cpath d="M8 2.7 3.8 7c-.3.3-.8.3-1.2 0l-2-2.1A1 1 0 1 1 2 3.5l1.2 1.1 3.4-3.3A1 1 0 0 1 8 2.7"/%3E');
}

@mixin glyph-navigation-accounts($color) {
  @include glyph(28, 24, $color, '%3Cpath d="M7 21V10h18-.1c.5 0 1.1.6 1.1 1v10c0 .4-.6 1-1 1H3c-.4 0-1-.6-1-1V3c0-.4.6-1 1-1h5c.4 0 1 .6 1 1v3h14c.6 0 1 .3 1 1v1h1.1l.9.3V7c-.1-1.9-1.4-3-3-3H11V3c0-1.6-1.4-3-3-3H3C1.4 0 0 1.4 0 3v18c0 1.6 1.4 3 3 3h22c1.6 0 3-1.4 3-3V11c0-1.5-1.4-2.7-2.9-3H5v13c0 .5-.5 1-1 1h3v-1Z"/%3E');
}

@mixin glyph-search-icon($color) {
  @include glyph(32, 32, $color, '%3Cpath d="M22.1 23.5 17 18.4l1.4-1.4 5.1 5.1zM2 9.5a7.5 7.5 0 1 0 15 0 7.5 7.5 0 0 0-15 0Zm-2 0a9.5 9.5 0 1 1 19 0 9.5 9.5 0 0 1-19 0Z"/%3E');
}

@mixin glyph-cross($color) {
  @include glyph(16, 16, $color, '%3Cpath d="m7.4 0-3 3-3-3L0 1.4l3 3-3 3 1.4 1.4 3-3 3 3 1.4-1.4-3-3 3-3z"/%3E');
}

// To ensure proper crispiness we need all a mixin for each arrow size and
// direction. Cause here at LFUI, we value crispiness

@mixin btn-arrow-standard-right($color) {
  @include glyph(28, 16, $color, '%3Cpath d="M0 9h25V7H0z"/%3E%3Cpath d="m19 13.3 1.4 1.4L27.1 8l-6.7-6.7L19 2.7 24.3 8z"/%3E');
}

@mixin btn-arrow-standard-left($color) {
  @include glyph(28, 16, $color, '%3Cpath d="M28 7H3v2h25z"/%3E%3Cpath d="M9 2.7 7.6 1.3.9 8l6.7 6.7L9 13.3 3.7 8z"/%3E');
}

@mixin btn-arrow-small-right($color) {
  @include glyph(21, 12, $color, '%3Cpath d="M0 7h18V5H0z"/%3E%3Cpath d="m13.7 10.2 1.4 1.5L20.8 6 15.1.3l-1.4 1.5L18 6z"/%3E');
}

@mixin btn-arrow-small-left($color) {
  @include glyph(21, 12, $color, '%3Cpath d="M21 5H3v2h18z"/%3E%3Cpath d="M7.3 1.8 5.9.3.2 6l5.7 5.7 1.4-1.5L3 6z"/%3E');
}

// These two are actually duplicates of the standard.
@mixin btn-arrow-large-right($color) {
  @include glyph(28, 16, $color, '%3Cpath d="M0 9h25V7H0z"/%3E%3Cpath d="m19 13.3 1.4 1.4L27.1 8l-6.7-6.7L19 2.7 24.3 8z"/%3E');
}

@mixin btn-arrow-large-left($color) {
  @include glyph(28, 16, $color, '%3Cpath d="M28 7H3v2h25z"/%3E%3Cpath d="M9 2.7 7.6 1.3.9 8l6.7 6.7L9 13.3 3.7 8z"/%3E');
}

/**
 * Link related
 */

@mixin link-still() {
  padding: 0;
  color: $link-color;
  text-decoration: underline;
}

@mixin link-hover-focus() {
  color: $link-color;
  outline: 0;
}

@mixin link-hover() {
  color: $link-hover-color;
  text-decoration: underline;
}

@mixin link-active() {
  color: #02234a;
}

@mixin link() {
  @include link-still();

  &:hover,
  &:focus { @include link-hover-focus(); }
  &:hover { @include link-hover(); }
  &:active { @include link-active(); }
}

/**
 * Reset related
 */

@mixin reset-list() {
  padding-left: 0;
  list-style-type: none;
  list-style-image: none;
}

@mixin reset-button() {
  padding: 0;
  background: none;
  border: 0;
  outline: 0;
  -webkit-appearence: none;
}

@mixin reset-link() {
  color: inherit;
  text-decoration: inherit;
  outline: 0;

  &:hover,
  &:focus {
    color: inherit;
  }

  &:active {
    opacity: 1;
  }
}

/**
 * General header
 */

@mixin header-block-border($color) {
  box-shadow: inset 0 (-$border-width) 0 $color;
}

@mixin header-block($interactive: false) {
  $color: $black;

  @if ($interactive) {
    @include reset-link();
    @include reset-button();
    $color: $link-color;
  }
  position: relative;
  display: block;
  width: 100%;
  padding: 1.1rem 1.25rem 1.125rem;
  overflow: hidden;

  font-family: $font-family-sans-serif;
  font-size: $font-size-xl;
  font-weight: 700;
  line-height: 1.25;

  color: $color;
  text-align: left;
  text-decoration: none;
  background: $white;

  border: 0;

  @include font-smoothing();

  @include header-block-border($navy);

  @if ($interactive) {
    @include header-block-border(rgba(0, 0, 0, .1));
    color: $link-color;
    user-select: none;
    transition: box-shadow 100ms var(--ease-out);

    @include hover () {
      color: $link-color;

      @include header-block-border($link-color);
      transition-duration: 150ms;

      text-decoration: none;
    }

    &:focus {
      color: $link-color;
    }
  }
}

/**
 * Patterns
 */

@mixin pattern-diagonal-stripes($color) {
  background: url('data:image/svg+xml;charset=UTF-8,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 600 600"%3E%3Cdefs%3E%3Cstyle%3E.cls-1%7Bfill:transparent%7D.cls-2%7Bfill:#{encodeHEX($color)}%7D%3C/style%3E%3C/defs%3E%3Cpath class="cls-1" d="M0 385.9 214.1 600h71.8L0 314.1v71.8zM0 485.9 114.1 600h71.8L0 414.1v71.8zM0 285.9 314.1 600h71.8L0 214.1v71.8zM600 14.1 585.9 0h-71.8L600 85.9V14.1zM600 414.1 185.9 0h-71.8L600 485.9v-71.8zM85.9 0H14.1L600 585.9v-71.8L85.9 0zM600 314.1 285.9 0h-71.8L600 385.9v-71.8zM600 114.1 485.9 0h-71.8L600 185.9v-71.8zM0 85.9 514.1 600h71.8L0 14.1v71.8zM600 214.1 385.9 0h-71.8L600 285.9v-71.8zM0 185.9 414.1 600h71.8L0 114.1v71.8zM0 585.9 14.1 600h71.8L0 514.1v71.8z"/%3E%3Cpath class="cls-2" d="M0 600h14.1L0 585.9V600zM0 514.1 85.9 600h28.2L0 485.9v28.2zM0 414.1 185.9 600h28.2L0 385.9v28.2zM0 314.1 285.9 600h28.2L0 285.9v28.2zM0 214.1 385.9 600h28.2L0 185.9v28.2zM0 114.1 485.9 600h28.2L0 85.9v28.2zM0 0v14.1L585.9 600H600v-14.1L14.1 0H0zM600 485.9 114.1 0H85.9L600 514.1v-28.2zM600 385.9 214.1 0h-28.2L600 414.1v-28.2zM600 285.9 314.1 0h-28.2L600 314.1v-28.2zM600 185.9 414.1 0h-28.2L600 214.1v-28.2zM600 85.9 514.1 0h-28.2L600 114.1V85.9zM600 0h-14.1L600 14.1V0z"/%3E%3C/svg%3E');
  background-repeat: repeat;
  background-size: 50px 50px;
}

@mixin pattern-wave-horizontal($color: $smoke) {
  width: 100%;
  height: 10px;
  background: url('data:image/svg+xml;charset=UTF-8,%3Csvg xmlns="http://www.w3.org/2000/svg" fill="#{encodeHEX($color)}" viewBox="0 0 137 6.6"%3E%3Cpath d="M125.8 6.6a10.8 10.8 0 0 1-6.6-2 8.5 8.5 0 0 0-9.8 0 10.8 10.8 0 0 1-6.5 2 10.8 10.8 0 0 1-6.5-2 8.5 8.5 0 0 0-9.8 0 10.8 10.8 0 0 1-6.6 2 10.8 10.8 0 0 1-6.5-2 8.5 8.5 0 0 0-9.8 0 10.8 10.8 0 0 1-6.5 2 10.8 10.8 0 0 1-6.6-2 8.5 8.5 0 0 0-9.8 0 10.8 10.8 0 0 1-6.5 2 10.8 10.8 0 0 1-6.5-2 8 8 0 0 0-5-1.6A8 8 0 0 0 18 4.6a10.8 10.8 0 0 1-6.5 2 10.8 10.8 0 0 1-6.5-2A8 8 0 0 0 0 3V0a10.8 10.8 0 0 1 6.5 2 8 8 0 0 0 5 1.6A8 8 0 0 0 16.3 2a10.8 10.8 0 0 1 6.5-2 10.8 10.8 0 0 1 6.5 2 8 8 0 0 0 4.9 1.6 8 8 0 0 0 5-1.6 11.4 11.4 0 0 1 13 0A8 8 0 0 0 57 3.6a8 8 0 0 0 5-1.6 11.4 11.4 0 0 1 13 0A8 8 0 0 0 80 3.6 8 8 0 0 0 85 2a11.4 11.4 0 0 1 13 0 8 8 0 0 0 5 1.6 8 8 0 0 0 4.8-1.6 11.4 11.4 0 0 1 13 0 8 8 0 0 0 5 1.6 8 8 0 0 0 4.9-1.6 10.8 10.8 0 0 1 6.5-2v3a8 8 0 0 0-5 1.6 10.8 10.8 0 0 1-6.4 2Z"/%3E%3C/svg%3E');
  background-repeat: repeat-x;
  background-size: 200px 10px;
}

/**
 * Font smoothing
 */

@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: $value;
    -moz-osx-font-smoothing: $value;
  }
}

/**
 * Dropdown/Dropup arrow
 */

@mixin drop-arrow($direction, $arrow-position, $dropdown-menu-position, $arrow-color, $border-color) {
  // See dropdown/readme.md for description of this mixin

  @if $arrow-position == right or $arrow-position == bottom {
    $arrow-position: 25%;
  } @else if $arrow-position == left or $arrow-position == top {
    $arrow-position: 75%;
  } @else {
    $arrow-position: 50%;
  }

  @if $dropdown-menu-position == right or $dropdown-menu-position == bottom {
    $dropdown-menu-position: 50%;
  } @else if $dropdown-menu-position == left or $dropdown-menu-position == top {
    $dropdown-menu-position: 75%;
  } @else {
    $dropdown-menu-position: null;
  }

  &[x-placement="top-start"] {
    right: $dropdown-menu-position;
    left: auto;
    box-sizing: border-box;

    &::after,
    &::before {
      position: absolute;
      top: 100%;
      right: $arrow-position;
      width: 0;
      height: 0;
      pointer-events: none;
      content: " ";
      border: solid transparent;
    }

    &::after {
      margin-left: -7px;
      border-width: 7px;
      border-top-color: $arrow-color;
      border-top-width: 12px;
    }

    &::before {
      margin-left: -8px;
      border-color: rgba(238, 0, 0, 0%);
      border-width: 8px;
      border-top-color: $border-color;
      border-top-width: 13px;
    }
  }

  &[x-placement="bottom-start"] {
    right: $dropdown-menu-position;
    left: auto;
    box-sizing: border-box;

    &::after,
    &::before {
      position: absolute;
      bottom: 100%;
      left: $arrow-position;
      width: 0;
      height: 0;
      pointer-events: none;
      content: " ";
      border: solid transparent;
    }

    &::after {
      margin-left: -7px;
      border-color: rgba(251, 251, 251, 0%);
      border-width: 7px;
      border-bottom-color: $arrow-color;
      border-bottom-width: 12px;
    }

    &::before {
      margin-left: -8px;
      border-color: rgba(238, 238, 238, 0%);
      border-width: 8px;
      border-bottom-color: $border-color;
      border-bottom-width: 13px;
    }
  }
}

/**
 * Developer warning
 */

@mixin warning($str: "Feature not implemented") {
  position: relative !important;
  outline: $red $border-width solid !important;

  &::after {
    position: absolute !important;
    right: 0 !important;
    bottom: 0 !important;
    width: auto !important;
    height: auto !important;
    padding: $border-width 0 $border-width !important;
    font-family: sans-serif !important;
    font-size: 1rem !important;
    color: $white !important;
    content: $str !important;
    background: $red !important;
  }
}

/**
 Uhhh Boostrap removed this one ;_;
 */

@mixin form-control-validation($color) {
  // Color the label and help text
  .form-control-feedback,
  .form-control-label,
  .col-form-label,
  .form-check-label,
  .custom-control {
    color: $color;
  }

  // Set the border and box shadow on specific inputs to match
  .form-control {
    border-color: $color;

    &:focus {
      @include box-shadow($input-box-shadow, 0 0 6px lighten($color, 20%));
    }
  }

  // Set validation states also for addons
  .input-group-append,
  .input-group-prepend {
    color: $color;
    background-color: lighten($color, 40%);
    border-color: $color;
  }
}
